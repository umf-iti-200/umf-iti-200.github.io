{"pageProps":{"post":{"title":"AWS RDS (Relational Database Service)","authorName":"Thiago Ferreira","authorId":"thiago-ferreira","publishedAt":"March 31, 2024 8:00 AM","category":"Amazon AWS","tags":["aws","amazon","rds"],"id":"aws-rds","content":"<h1 id=\"introduction\">Introduction</h1>\n<p>Amazon Relational Database Service (Amazon RDS) is a web service that makes it easier to set up, operate, and scale a relational database in the AWS Cloud.</p>\n<h1 id=\"before-you-begin\">Before You Begin</h1>\n<p>This tutorial was created to help you understand the basics of Amazon AWS. It is not intended to help you deploy any real project/product by any means. There are several other factors involved, such as security, when doing it. That said, please do not follow the same steps if you want to deploy a real application. Please talk with a specialist.</p>\n<p>If you did not create yet an AWS account, please follow <a href=\"/posts/create-a-new-aws-account\">this tutorial</a>. If you already have an account, just log into Console.</p>\n<h1 id=\"create-a-security-group\">Create a Security Group</h1>\n<p>Amazon Virtual Private Cloud (VPC) is a service that lets you launch AWS resources in a logically isolated virtual network that you define. On your Console Home, look for <code>Services</code> on the top navbar and then go to <code>Database → VPC</code>.</p>\n<p><img width=\"500\" src=\"https://user-images.githubusercontent.com/114015/224590065-c127ee93-46e7-4e68-bd8f-e955bc3284e1.png\"></p>\n<p>On the left sidebar, search for <em>Security Groups</em> and click on it:</p>\n<p><img width=\"317\" src=\"https://user-images.githubusercontent.com/114015/224590189-99d3b466-f7a5-4db1-b6b6-7b0e5e7bf3b7.png\"></p>\n<p>On the right side, search for <em>Create security group</em></p>\n<p><img width=\"416\" src=\"https://user-images.githubusercontent.com/114015/224590344-2ea4123d-7446-4970-a74f-30794d72fc29.png\"></p>\n<p>For the <em>Security group name</em>, just type a name based on your preferences. For now, let's just  For <em>Description</em>, type something related to this security group.</p>\n<p><img width=\"500\" src=\"https://user-images.githubusercontent.com/114015/224591949-cc736164-9e04-420b-9a8d-492b4cbab427.png\"></p>\n<p>Then click on <em>Add rule</em> under <strong>Inbound Rules</strong> and add the following rules.</p>\n<p><img width=\"500\" src=\"https://user-images.githubusercontent.com/114015/224590692-d848c8bf-35fe-44bd-8951-1c16ee5f5f20.png\"></p>\n<p>In <em>Source</em>, select <code>Anywhere-IPv4</code> for the first and <code>Anywhere-IPv6</code> for the second rule. Finally, click on <em>Create Security Group</em>. We have created this security group because we want to have access to the database using <a href=\"https://www.pgadmin.org\">pgAdmin</a>, besides several other reasons. In a production/real environment, you should perform very different steps. Now you can create a Postgres database.</p>\n<h1 id=\"create-an-rds-database\">Create an RDS Database</h1>\n<p>On your Console Home, look for <code>Services</code> on the top navbar and then go to <code>Database → RDS</code>.</p>\n<p><img width=\"500\" src=\"https://user-images.githubusercontent.com/114015/224587636-2fb3a5af-efba-4c7c-a33a-07c03230f728.png\"></p>\n<p>When you access RDS, the image below shows its homepage.</p>\n<p><img width=\"500\" src=\"https://user-images.githubusercontent.com/114015/224587844-1888ebf3-67c5-47ee-ab8e-b1028a4fc962.png\"></p>\n<p>As you can see, no database exists.</p>\n<h1 id=\"creating-the-first-database\">Creating the First Database</h1>\n<p>On the homepage, click on <em>Create database</em>. You are going to pass through several steps until the end. Please pay attention to all the details.</p>\n<p><img width=\"411\" src=\"https://user-images.githubusercontent.com/114015/224588057-02a883a3-7c3c-4506-8c10-45442427b6c0.png\"></p>\n<p>Initially, you are going to use the <em>Standard create</em> option. You should select this option because you want to be under the free tier.</p>\n<p><img width=\"500\" src=\"https://user-images.githubusercontent.com/114015/224588306-06486b0a-6a5f-4361-9794-d91fbf34bc58.png\"></p>\n<p>For the Engine option, you should select <strong>Postgres</strong> and set the engine version as default. The image below shows PostgreSQL Engine Version 14.6-R1. However, you should select the most recent version (or just keep the engine as it is).</p>\n<p><img width=\"500\" src=\"https://user-images.githubusercontent.com/114015/224588406-e0f1bef9-16cb-464d-8a3b-cac3af8e4b2b.png\"></p>\n<p><strong>Heads up!</strong> In this step, you should select <em>Free tier</em>.</p>\n<p><img width=\"739\" src=\"https://user-images.githubusercontent.com/114015/224588504-de093e39-57a5-4908-aac0-91ba802c359d.png\"></p>\n<p>Now it is time to set the settings of your database.</p>\n<ul>\n<li><strong>DB instance identifier</strong>: you may keep it as <code>database-1</code></li>\n<li><strong>Master username</strong>: you may keep it as <code>postgres</code></li>\n<li><strong>Master password</strong>: you may keep it as <code>postgres</code></li>\n</ul>\n<p>For <em>Credentials management</em>, keep \"Self managed\".</p>\n<p><img width=\"475\" src=\"https://user-images.githubusercontent.com/114015/224588929-a65ca38d-a622-49a7-867b-ee9467921aa5.png\"></p>\n<div class=\"alert alert-warning\">\n    In a production/real environment, <strong>NEVER</strong> use this username and password. Pick something hard to guess.\n</div>\n<p>For <em>Instance configuration</em>, just select the configuration under the free tier, i.e., <code>db.t3.micro</code>.</p>\n<p><img width=\"500\" src=\"https://user-images.githubusercontent.com/114015/224589457-a2001c83-cccf-464d-9123-266d8fa4ac30.png\"></p>\n<p>Heads up! <strong>Uncheck</strong> the <em>Enable storage autoscaling</em>.</p>\n<p><img width=\"500\" src=\"1.png\"></p>\n<p>In <em>Connectivity</em>, set <code>Yes</code> for <em>Public access</em>.</p>\n<p><img width=\"439\" src=\"https://user-images.githubusercontent.com/114015/224592189-83ca3884-a9f3-43b0-8b62-9e3774678910.png\"></p>\n<p>Now select the Security Group you created at the beginning of this tutorial.</p>\n<p><img width=\"424\" src=\"https://user-images.githubusercontent.com/114015/224592553-0fd06d91-d946-415c-aff0-281258d8acaf.png\"></p>\n<p>Heads up! <strong>Uncheck</strong> the following option:</p>\n<p><img width=\"500\" src=\"https://user-images.githubusercontent.com/114015/224592920-4c295353-9415-4d97-8fdb-4df8409a2b5e.png\"></p>\n<p>Now expand <em>Additional configuration</em> and then set an <em>Initial database name</em></p>\n<p><img width=\"500\" src=\"https://user-images.githubusercontent.com/114015/224593057-9c2b3af7-4d2c-4d31-85fc-193b82787f75.png\"></p>\n<p>And then <strong>uncheck</strong> the following options:</p>\n<p><img width=\"520\" src=\"https://user-images.githubusercontent.com/114015/224593164-299befd7-fc3b-440f-ab3c-d87282b89c20.png\"></p>\n<p>and <strong>uncheck</strong> this:</p>\n<p><img width=\"403\"src=\"https://user-images.githubusercontent.com/114015/224593284-9a0448d6-1c30-491b-b5e3-89a2e1efe30c.png\"></p>\n<p>Finally, click on <em>Create database</em>. if the following screen pops up for you, just close it.</p>\n<p><img width=\"500\" src=\"2.png\"></p>\n<p>This process will take a long time, sometimes, it can take 5 min or more until you have the database ready for use (it will show <code>Available</code> in the <em>Status</em>).</p>\n<p><img width=\"612\"src=\"https://user-images.githubusercontent.com/114015/224594216-4b9364c4-7b5d-4ed5-a9e3-878bbe23ab5d.png\"></p></p>\n<div class=\"alert alert-warning\" role=\"alert\">\n    <strong>Caveat</strong>: In this tutorial, I asked you to <strong>uncheck</strong> several options (including security options). This was intentional and only because I want you to be under the free tier and I also want you to have external access to your database. In a real/production environment, the settings will be very different.\n</div>\n<h1 id=\"connecting-to-your-database\">Connecting to your database</h1>\n<p>Once you see the status as <code>Available</code>, it is time to access the database by using pgAdmin. Thus, open it on your computer and then go to the left sidebar to register a new server.</p>\n<p><img width=\"542\" src=\"https://user-images.githubusercontent.com/114015/224595030-ebc562eb-0676-431e-a3aa-724e640e23ca.png\"></p>\n<p>Type a name for your connection (it could be any name):</p>\n<p><img width=\"319\" src=\"https://user-images.githubusercontent.com/114015/224595120-8070de18-4999-4875-97ed-26fba844bbc1.png\"></p>\n<p>Select the <em>Connection</em> tab and the first information needed is the host/IP address.</p>\n<p><img width=\"456\" src=\"https://user-images.githubusercontent.com/114015/224595212-3a35fe9b-9b25-4579-b6f2-6fef8bd8b1aa.png\"></p>\n<p>Let's go back to RDS and click on the database that was recently launched.</p>\n<p><img width=\"287\" src=\"https://user-images.githubusercontent.com/114015/224595299-6a77c66e-429f-469f-846c-228c201dcc7c.png\"></p>\n<p>Search for <em>Endpoint &amp; Port</em> information in <em>Connectivity &amp; Security</em>.</p>\n<p><img width=\"299\" src=\"https://user-images.githubusercontent.com/114015/224595403-e1a87939-c256-49ea-b0b2-5747af3cb8ba.png\"></p>\n<p>This will be your hostname/IP address and the port used. Type it on your pgAdmin, in addition to the password you have created before. Click on \"Save\".</p>\n<p><img width=\"395\" src=\"https://user-images.githubusercontent.com/114015/224595549-8b525827-8ab9-4a36-9756-acdfcae0c10b.png\"></p>\n<p>If everything goes well, you will be able to connect to your newly created database:</p>\n<p><img width=\"338\" height=\"338\" src=\"3.png\"></p>\n<p>Congratulations! Now it is time to add tables and some data to be used by your application.</p>\n<div class=\"alert alert-warning\">\n    In a real/production environment, the creation of tables will be an automated script, not a manual process.\n</div>\n<h1 id=\"creating-tables\">Creating Tables</h1>\n<p>To create a table, just right-click on the name of the database in which the table will be stored, and then click on <code>Query Tool</code></p>\n<p><img width=\"338\" height=\"338\" src=\"4.png\"></p>\n<p>Create the following table:</p>\n<pre><code class=\"hljs sql language-sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> books(\n  id      SERIAL <span class=\"hljs-keyword\">PRIMARY</span> KEY,\n  title   TEXT <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span>,\n  author  TEXT <span class=\"hljs-keyword\">NULL</span>\n);\n</code></pre>\n<p>Just for testing purposes, let's add only the first entry manually. Thus, type the following SQL command:</p>\n<pre><code class=\"hljs sql language-sql\"><span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> books (title, author) <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-string\">&#x27;Book A&#x27;</span>, <span class=\"hljs-string\">&#x27;Author A&#x27;</span>);\n</code></pre>\n<p>If you would like to double-check the information, just type the SELECT command to return all rows.</p>\n<p><img width=\"322\" src=\"https://user-images.githubusercontent.com/114015/224597052-20f3cff4-1fd3-4dca-a7fd-e340822aef02.png\"></p>\n<p>As you can see, the <code>id</code> column was not provided in the INSERT command. Since this column was created as <code>SERIAL</code> and <code>PRIMARY KEY</code>, Postgres assigns automatically a new ID for each row and avoids any duplicity.</p>\n<h1 id=\"connecting-the-application\">Connecting the Application</h1>\n<p>Since we have the database working successfully, let's connect the app to the database. However, you will not do it on your workspace. By following the instructions of the <a href=\"/posts/aws-ec2\">previous tutorial</a> about AWS EC2, create a new virtual computer and then clone the following repo on it:</p>\n<ul>\n<li><a href=\"https://github.com/umf-iti-200/amazon-rds\">https://github.com/umf-iti-200/amazon-rds</a></li>\n</ul>\n<p>After cloning, because this is a Node.js application, don't forget to install all dependencies by typing:</p>\n<pre><code class=\"hljs shell language-shell\">npm install\n</code></pre>\n<p>If you type <code>ls --all</code>, you are going to see a file called <code>.env</code>. This is used for storing information regarding the database connection.</p>\n<p><img width=\"500\" src=\"https://user-images.githubusercontent.com/114015/224598111-0edcbe08-f0bd-49bf-8491-5f430c9983ee.png\"></p>\n<p>Because we are using the terminal/console to interact with the virtual computer, there is no graphical-based user interface to edit this file. In this case, let's use a tool named <code>nano</code>. Just type:</p>\n<pre><code class=\"hljs shell language-shell\">nano .env\n</code></pre>\n<p>By using the keyboard, you can navigate through all lines of the document. Thus, type the same information you typed on pgAdmin.</p>\n<p><img width=\"534\" src=\"https://user-images.githubusercontent.com/114015/224598544-f524c8e3-c432-4b1e-b048-3ed7af88ee9e.png\"></p>\n<p>To save the file, just press <code>CTRL + O</code> to \"Write Out\" and then ENTER. In addition to this, press <code>CTRL + X</code> to exit the program. Finally, just start the application by typing:</p>\n<pre><code class=\"hljs shell language-shell\">node server.js\n</code></pre>\n<p>Congratulations! You are now running the app entirely in the cloud.</p>\n<p><img width=\"534\" src=\"https://user-images.githubusercontent.com/114015/224601011-a4f50872-33ca-4f60-a06b-7f0069a1cb61.png\"></p>\n<h1 id=\"pricing\">Pricing</h1>\n<p>If you would like to know more about pricing for PostgreSQL, please access <a href=\"https://aws.amazon.com/rds/postgresql/pricing/\">https://aws.amazon.com/rds/postgresql/pricing/</a> for details.</p>\n<h1 id=\"clean-up\">Clean Up</h1>\n<p>Navigate to your RDS dashboard (where you can see the list of all your databases). Select the database and then click <strong>Delete</strong>.</p>\n<p><img width=\"500\" src=\"https://user-images.githubusercontent.com/114015/224602176-5ff3cbe0-0141-4abd-afa3-14793af1631b.png\"></p>\n<p>A confirmation dialog will pop up. Just uncheck \"Create final snapshot\", check \"I acknowledge that upon instance deletion, automated backups, including system snapshots and point-in-time recovery, will no longer be available.\", type \"delete me\", and, finally, click on \"Delete\".</p>\n<p><img width=\"388\" height=\"388\" src=\"6.png\"></p>\n<div class=\"alert alert-danger\" role=\"alert\">\n    <i class=\"bi bi-exclamation-triangle me-2\"></i>Don't forget to delete all databases after this tutorial.\n</div>\n<h1 id=\"references\">References</h1>\n<ol>\n<li><a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html\">What is Amazon Relational Database Service (Amazon RDS)?</a></li>\n</ol>","readingTimeAsText":"7 min read","publishedFromNow":"8 days ago"},"recentPosts":[{"title":"How to Install Nginx on MacOS","authorName":"Thiago Ferreira","authorId":"thiago-ferreira","publishedAt":"April 8, 2024 5:12 AM","category":"Tutorial","tags":["nginx","how-to"],"id":"how-to-install-nginx-on-mac-s","content":"<h1 id=\"introduction\">Introduction</h1>\n<p>Nginx (pronounced \"engine x\") is a web server that can also be used as a reverse proxy, load balancer, mail proxy and HTTP cache. However, a large fraction of web servers use Nginx, often as a load balancer.</p>\n<h1 id=\"installing\">Installing</h1>\n<p>To install it on MacOS, we are going to use <a href=\"https://brew.sh\">homebrew</a>. If you don't have it installed on your computer, please <a href=\"https://mac.install.guide/homebrew/3\">follow this tutorial</a>.</p>\n<p>If you have homebrew installed, open the terminal and type:</p>\n<pre><code class=\"hljs shell language-shell\">brew install nginx\n</code></pre>\n<p>The default port will be set to <code>8080</code>. Also, you don't need to type <code>sudo</code> to run it.</p>\n<h1 id=\"configuring\">Configuring</h1>\n<p>Nginx uses configuration files to run. For this installation, nginx will load all files in <code>/opt/homebrew/etc/nginx/servers/</code>.</p>\n<h1 id=\"running\">Running</h1>\n<pre><code class=\"hljs shell language-shell\">brew services start nginx\n</code></pre>\n<h1 id=\"stopping\">Stopping</h1>\n<p>Type the following command to stop nginx on your computer</p>\n<pre><code class=\"hljs shell language-shell\">brew services stop nginx\n</code></pre>","readingTimeAsText":"1 min read","publishedFromNow":"11 hours ago"},{"title":"How to Open Node.js Project","authorName":"Thiago Ferreira","authorId":"thiago-ferreira","publishedAt":"April 6, 2024 5:12 AM","category":"Tutorial","tags":["vscode","how-to"],"id":"how-to-open-nodejs-project","content":"<h1 id=\"introduction\">Introduction</h1>\n<p>First, you have to open the project on Visual Studio Code (VS Code). You should search for the \"File\" menu and then \"Open Folder…\". Please don't select \"Open..\" This will open a single file. You should open the entire project (entire folder).</p>\n<p><img src=\"unnamed.png\" alt=\"\" width=\"300\" height=\"300\" /></p>\n<p>Select the project folder and then press \"Open\".</p>\n<p><img src=\"unnamed-1.png\" alt=\"\" width=\"300\" height=\"300\" /></p>\n<p>If everything goes well, you should be able to see on VS Code the entire folder</p>\n<p><img src=\"unnamed-2.png\" alt=\"\" width=\"300\" height=\"300\" /></p>\n<p>Go back to the menu bar, search for \"View\" and then click on \"Terminal\".</p>\n<p><img src=\"unnamed-3.png\" alt=\"\" width=\"200\" height=\"200\" /></p>\n<p>This will open a built-in terminal on VS Code. The good thing is that the terminal is opened in the project folder. That is, you don't need to navigate to that folder. You are ready to launch your project.</p>\n<p><img src=\"unnamed-4.png\" alt=\"\" width=\"500\" height=\"500\" /></p>\n<p>Just type <code>node server.js</code>. You should be able now to see your project running in the browser.</p>\n<p><img src=\"unnamed-5.png\" alt=\"\" width=\"500\" height=\"500\" /></p>","readingTimeAsText":"1 min read","publishedFromNow":"2 days ago"},{"title":"How to Install PostgreSQL on Windows","authorName":"Thiago Ferreira","authorId":"thiago-ferreira","publishedAt":"April 1, 2024 5:12 AM","category":"Tutorial","tags":["how-to","postgresql"],"id":"how-to-install-postgresql-on-windows","content":"<h1 id=\"downloading\">Downloading</h1>\n<p>Access the <a href=\"https://www.postgresql.org/download/\">download page</a> and select \"Windows\".</p>\n<p><img src=\"1.png\"></p>\n<p>Click on \"Download the installer\".</p>\n<p><img src=\"2.png\"></p>\n<p>Finally, click on \"Windows x86-64\".</p>\n<p><img  width=\"400\" src=\"3.png\"></p>\n<p>The download should start automatically. Otherwise, press \"Click here\".</p>\n<p><img width=\"400\" src=\"4.png\"></p>\n<p>If everything goes well, you should have the installer located in the \"Downloads\" folder on your Windows. Just double-click on it to initiate the installation process.</p>\n<p><img width=\"400\" src=\"5.png\"></p>\n<h1 id=\"installing\">Installing</h1>\n<p>Just press \"Yes\" to confirm you would like to install PostgreSQL.</p>\n<p><img width=\"400\" src=\"6.png\"></p>\n<p>Just click on \"Next\".</p>\n<p><img width=\"400\" src=\"7.png\"></p>\n<p>Keep everything as it is. Just click on \"Next\".</p>\n<p><img width=\"400\" src=\"8.png\"></p>\n<p>Keep everything as it is. Just click on \"Next\".</p>\n<p><img width=\"400\" src=\"10.png\"></p>\n<p>Keep everything as it is. Just click on \"Next\".</p>\n<p><img width=\"400\" src=\"11.png\"></p>\n<p>Type the password for your database. For now, you can just type <code>postgres</code> in both text fields. In production, <strong>never</strong> use this password. Choose a strong one. After that, click on \"Next\".</p>\n<p><img width=\"400\" src=\"12.png\"></p>\n<p>Keep the port information as it is. Click on \"next\".</p>\n<p><img width=\"400\" src=\"13.png\"></p>\n<p>Keep the location as it is. Click on \"next\".</p>\n<p><img width=\"400\" src=\"14.png\"></p>\n<p>A pre-installation summary will show up to confirm all your selections. Just press on \"Next\".</p>\n<p><img width=\"400\" src=\"15.png\"></p>\n<p>Finally, press on \"Next\".</p>\n<p><img width=\"400\" src=\"16.png\"></p>\n<p>The installation process will get started. Wait a few minutes to get it done.</p>\n<p><img width=\"400\" src=\"17.png\"></p>\n<p>Heads up! Uncheck this option. We don't need it for now. Click on \"Finish\".</p>\n<p><img width=\"400\" src=\"18.png\"></p>\n<p>Done. The entire process should be completed and you have installed both PostgreSQL and pgAdmin 4 in the same process.</p>\n<p>If you would like to install only the pgAdmin 4, I recommend you to follow <a href=\"/posts/how-to-install-pgadmin-4-on-windows\">this tutorial</a>.</p>","readingTimeAsText":"2 min read","publishedFromNow":"7 days ago"}]},"__N_SSG":true}