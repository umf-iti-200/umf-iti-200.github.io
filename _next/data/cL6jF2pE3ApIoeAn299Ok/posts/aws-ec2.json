{"pageProps":{"post":{"title":"AWS EC2 (Elastic Compute Cloud)","authorName":"Thiago Ferreira","authorId":"thiago-ferreira","publishedAt":"March 22, 2024 8:00 AM","category":"Amazon AWS","tags":["aws","amazon","ec2"],"id":"aws-ec2","content":"<h1 id=\"introduction\">Introduction</h1>\n<p>Amazon EC2 (Elastic Compute Cloud) is a simple web interface to create and manage Amazon EC2 instances and resources. Using this service, you can create and manage your servers. Amazon EC2 offers the broadest and deepest <strong>computing platform</strong>, with over 500 instances and a choice of the latest processor, storage, networking, operating system, and purchase model to help you best match the needs of your workload.</p>\n<h1 id=\"before-you-begin\">Before You Begin</h1>\n<p>If you did not create yet an AWS account, please follow <a href=\"/posts/create-a-new-aws-account\">this tutorial</a>. If you already have an account, just sign in to Console.</p>\n<h1 id=\"create-an-ec2-server\">Create an EC2 Server</h1>\n<p>On your Console Home, look for <code>Services</code> on the top navbar and then go to <code>Compute → EC2</code>.</p>\n<p><img  src=\"https://user-images.githubusercontent.com/114015/224560899-a2534981-9fcb-46c7-98ff-5d8c6c07eadf.png\"></p>\n<p>When you access EC2, the image below shows its homepage.</p>\n<p><img src=\"https://user-images.githubusercontent.com/114015/224561673-c1280961-d58c-4422-9aab-df733bef2ba5.png\"></p>\n<p>If this is your first time accessing this service, you will see 0 instances running. But, what is an instance? An instance is a computer running in the cloud (or just a \"virtual computer\"). If you would like to create a new instance, on the homepage, search for <em>Launch Instance</em>. You are going to answer several questions while setting up a new instance.</p>\n<p><img width=\"250\" src=\"https://user-images.githubusercontent.com/114015/224561798-4642b88d-911d-4aea-a386-0d0862978e92.png\"></p>\n<p>The first information is the name of your instance. For this tutorial, just type <code>backend-server</code>. However, you may pick another name based on your preference.</p>\n<p><img width=\"250\" src=\"https://user-images.githubusercontent.com/114015/224561921-222fc68d-d4d7-4b30-a37c-fcc245554f7a.png\"></p>\n<p>The second step is to select the <em>Application and OS images</em>. In this one, you will set which Operating System are you planning to use. Because we want to use the free tier of Amazon AWS, it is important to keep the 'default' settings as stated in the image below. Anything other than that can cost you extra money.</p>\n<p><img src=\"https://user-images.githubusercontent.com/114015/224562139-dd5292db-4e34-4e97-a364-1097445489fb.png\"></p>\n<p>The next type is the <em>Instance Type</em>. Here you are going to select how \"powerful\" the instance is. Again, we want to be under the free tier. So, select <code>t2.micro</code>. As you can see, this machine has only 1 vCPU (or Virtual CPU) and 1 GiB as RAM. This is sufficient for this tutorial. Again, avoid selecting other types. It will cost you extra money.</p>\n<p><img src=\"https://user-images.githubusercontent.com/114015/224562246-ef58a892-f151-487c-94c7-cc7850cd0d61.png\"></p>\n<p>The next step is the <em>Key pair (login)</em>. Once you have your instances ready and running, you will need this information to access them because AWS EC2 uses <a href=\"https://en.wikipedia.org/wiki/Secure_Shell\">SSH</a> to access instances. So, let's create a new key pair.</p>\n<p><img  src=\"https://user-images.githubusercontent.com/114015/224562538-e3f6d78d-43ba-4597-a713-dc72d9c6c92d.png\"></p>\n<p>A dialog window will open. Just type a name for your key pair and keep the remaining options set as default. As a suggestion for this tutorial, just type your <strong>first name</strong> and keep the current selection as it is. Press <em>Create key pair</em>.</p>\n<p><img width=\"250\" src=\"https://user-images.githubusercontent.com/114015/224562656-efaf808f-83e5-4cf6-927f-ab6ee344e35c.png\"></p>\n<p>If everything goes well, you will be asked to download a file <code>&lt;YOUR_NAME&gt;.pem</code> and then you should see the key pair you have just created as selected.</p>\n<p><img width=\"250\" src=\"https://user-images.githubusercontent.com/114015/224562750-f071b083-c902-44b2-adc0-ecd912c5c978.png\"></p>\n<p>The next step is to select <em>Network Type</em>. You will choose the type of traffic your \"virtual laptop\" will allow from the outside. Just for this tutorial, select HTTPS and HTTP. In a real or production environment, I would recommend you select only HTTPS.</p>\n<p><img width=\"250\" src=\"https://user-images.githubusercontent.com/114015/224562920-4fcb6d3c-b942-41a1-ad3f-5f10f2ea6b51.png\"></p>\n<p>For <em>Configure Storage</em>, just keep the default option.</p>\n<p><img src=\"https://user-images.githubusercontent.com/114015/224563093-dc514bf5-8f18-45f4-a8a9-f3f50bd22a54.png\"></p>\n<p>That's it. You did all the basic settings for your instance. On the right side, you can see a summary of all options you have selected so far. Just click on <em>Launch instance</em>.</p>\n<p><img src=\"https://user-images.githubusercontent.com/114015/224563217-757ae920-3c37-447c-9aa4-29b1c80bdd6e.png\"></p>\n<p>If you go back to the EC2's homepage, you have now 1 instance running.</p>\n<p><img src=\"https://user-images.githubusercontent.com/114015/224563311-67081102-f124-45ad-bed4-1c681b8d94ed.png\"></p>\n<p>If you click on it, you can see that your instance is now running.</p>\n<p><img src=\"https://user-images.githubusercontent.com/114015/224563325-6aad312f-d839-448e-9c63-2a8ead202b8b.png\"></p>\n<h1 id=\"accessing-your-instance\">Accessing Your Instance</h1>\n<h2 id=\"linux-and-mac\">Linux and Mac</h2>\n<p>If you are using Linux or Mac, you need to change the permissions on your key pair file by typing the following command:</p>\n<pre><code class=\"hljs shell language-shell\">chmod 400 &lt;YOUR_NAME&gt;.pem\n</code></pre>\n<p>Don't forget to change <code>&lt;YOUR_NAME&gt;.pem</code>. If you don’t change the permission, the key pair is considered <em>too permissive</em>, or unsafe, because it is ostensibly readable by other users and then you won't be able to SSH into the EC2 instance as a result. Now you only need to follow the same steps for <a href=\"#windows\">Windows</a></p>\n<h2 id=\"windows\">Windows</h2>\n<p>Open the Terminal/Console, navigate to the folder that has your <code>.pem</code> file and then type:</p>\n<pre><code class=\"hljs shell language-shell\">ssh -i &lt;YOUR_NAME&gt;.pem ec2-user@&lt;public_ip_from_dashboard&gt;\n</code></pre>\n<p>You need to replace <code>&lt;public_ip_from_dashboard&gt;</code>. On your EC2 dashboard, select the instance you have just created.</p>\n<p><img src=\"https://user-images.githubusercontent.com/114015/224564789-f0f3b12b-2a52-4439-b437-7bfeca32779e.png\"></p>\n<p>Look for \"Public IPv4 address\". This is the IP you will need to access your instance.</p>\n<p><img src=\"https://user-images.githubusercontent.com/114015/224564855-2837c819-4fa1-4cad-82ad-99e996d09cd0.png\"></p>\n<div className=\"alert alert-warning\">\n    Use this IP <strong>only</strong> for SSH.\n</div>\n<p>Now it is time to access your instance. On the terminal, type again the aforementioned command with the correct IP. For the first question, just type \"yes\" and then press enter. Your computer will ask this only once.</p>\n<p><img src=\"https://user-images.githubusercontent.com/114015/224565060-bd94d7d9-c36c-42fc-9096-6c20450242fb.png\"></p>\n<p>Congratulations! Now you are accessing the instance you have just created! At this point, your terminal is now interacting directly with your EC2 instance (aka your \"virtual computer\") - <strong>rather than your physical machine</strong>.</p>\n<div className=\"alert alert-warning\">\n    The next commands will be executed in your instance, so keep the terminal open.\n</div>\n<h1 id=\"update-all-packages\">Update All Packages</h1>\n<p>Because you have just created your instance, it is a good practice to upgrade all packages to the newest versions. Thus, type in the terminal to elevate your privileges:</p>\n<pre><code class=\"hljs shell language-shell\">sudo su\n</code></pre>\n<p>and then type:</p>\n<pre><code class=\"hljs shell language-shell\">yum update -y\n</code></pre>\n<p>Note: if you are familiar with using <strong>homebrew</strong> on your Mac, you can think of the way we are using yum here as similar to <strong>brew</strong>.</p>\n<h1 id=\"install-nodejs\">Install Node.js</h1>\n<p>Follow <a href=\"https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-up-node-on-ec2-instance.html\" target=\"_blank\"><span>this link</span></a> for more information. In summary, type the following commands in the terminal:</p>\n<pre><code class=\"hljs shell language-shell\">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash\n</code></pre>\n<p>This will download the installer. Then type the following to install Node.js:</p>\n<pre><code class=\"hljs shell language-shell\">. ~/.nvm/nvm.sh ; nvm install --lts\n</code></pre>\n<p>This command will install the LTS (Long Term Support) version. At the time of this tutorial being written, the LTS version is 20.</p>\n<h1 id=\"your-first-nodejs-application-on-ec2\">Your First Node.js application on EC2</h1>\n<p>Now it is time to run your first application on EC2 by using the content from GitHub. If you don't have an account yet, please <a href=\"https://github.com/signup\" target=\"_blank\"><span>create one</span></a>.</p>\n<p>Because your instance does not have Git installed, you need to install it:</p>\n<pre><code class=\"hljs shell language-shell\">yum install git\n</code></pre>\n<p>Note: Before installing any new tool/package, please make sure you are \"root\". If you are not, type <code>sudo su</code> in the terminal/console.</p>\n<p>Confirming by typing \"y\" in the following prompt:</p>\n<p><img src=\"https://user-images.githubusercontent.com/114015/224567199-68fa3f02-7fd9-4d5c-9386-f6e5fd9a9107.png\"></p>\n<p>Now type the following command to clone the source on it:</p>\n<pre><code class=\"hljs shell language-shell\">git clone https://github.com/umf-iti-200/amazon-ec2.git\n</code></pre>\n<p>If everything went well, you are supposed to see the folder downloaded on your instance. Just type <code>ls</code>:</p>\n<p><img src=\"https://user-images.githubusercontent.com/114015/224567311-63f5756f-2eed-46f1-b258-dce61cfce900.png\"></p>\n<p>Open the folder by typing:</p>\n<pre><code class=\"hljs shell language-shell\">cd amazon-ec2\n</code></pre>\n<p>Now you can install all dependencies</p>\n<pre><code class=\"hljs shell language-shell\">npm install\n</code></pre>\n<p>and, finally, you can run your application in the cloud:</p>\n<pre><code class=\"hljs shell language-shell\">node server.js\n</code></pre>\n<p><img src=\"https://user-images.githubusercontent.com/114015/224567576-21e31cd2-c4bc-457d-97a3-79f24d2a65a8.png\"></p>\n<p>Congratulations! Your app is now running in the cloud! Let's see it in action!</p>\n<h1 id=\"visualizing-your-server\">Visualizing Your Server</h1>\n<p>Open your EC2 dashboard on your browser. Select the instance you created earlier and search for Public IPv4 DNS (as in the image below). This is the URL the users will access your server (Don't share the IP since it can change constantly).</p>\n<p><img src=\"https://user-images.githubusercontent.com/114015/224567914-3a952e18-dcc0-49df-8a2e-3cefe1b268cb.png\"></p>\n<p>Open your browser and type it:</p>\n<pre><code class=\"hljs\"><span class=\"hljs-symbol\">http:</span><span class=\"hljs-comment\">//&lt;SERVER_URL&gt;:3000</span>\n</code></pre>\n<p>Note: Don't forget the PORT <code>3000</code> and <code>http://</code>. What happened? Exactly! Nothing. Although your server is running.</p>\n<p><img src=\"https://user-images.githubusercontent.com/114015/224569241-2926d039-a2c3-4d6d-9433-1004d65e4b63.png\"></p>\n<p>The problem is that your browser cannot reach your server (virtual computer) because you haven't configured the Security Group to allow inbound rules for HTTP/HTTPS on your instance. By default, only the SSH port was allowed (Port 22).</p>\n<h1 id=\"allow-public-access\">Allow Public Access</h1>\n<p>Go back again to the EC2 dashboard, select your instance and then open the <em>Security tab</em> at the bottom. On <em>Security groups</em>, you will see what is the security group attached to your instance. Click on it.</p>\n<p><img src=\"https://user-images.githubusercontent.com/114015/224569595-1e13939a-6e09-40cc-95f9-9668f3acc428.png\"></p>\n<p>Now you have access to set all <em>inbound</em> and <em>outbound</em> rules for this specific security group. Select the <em>Inbound Rules</em> tab and then <em>Edit Inbound rules</em>.</p>\n<p><img src=\"https://user-images.githubusercontent.com/114015/224569693-adf571bc-ed48-43be-89d1-d3ebfe9d1f7d.png\"></p>\n<p>Click on Add Rules and then type/select the following settings:</p>\n<ul>\n<li><strong>Type:</strong> Custom TCP</li>\n<li><strong>Port Range:</strong> 3000</li>\n<li><strong>Source:</strong> Anywhere IPv4</li>\n</ul>\n<p>Finally, Click on <em>Save rules</em>. You should come up with something similar to the image below:</p>\n<p><img src=\"https://user-images.githubusercontent.com/114015/224569912-1e6a7300-50f8-4c5c-a144-4745f2a866c9.png\"></p>\n<p>Go back to your browser and refresh the website. Guess what? Now you should be able to see your server running! If you don't see the page running, change it from \"https\" to \"http\".</p>\n<p><img src=\"https://user-images.githubusercontent.com/114015/224570097-9bdd6898-f751-44d7-8a20-7564006c8ba9.png\"></p>\n<h1 id=\"clean-up\">Clean Up</h1>\n<p>Navigate to your EC2 dashboard (where you can see the list of all your instances). Select the instance and then click <em>Stop Instance</em>.</p>\n<p><img src=\"https://user-images.githubusercontent.com/114015/224570572-f7c904b8-f8d9-437d-9d09-a0c27bdb7b1b.png\"></p>\n<div className=\"alert alert-danger\">\n    <i className=\"bi bi-exclamation-triangle me-2\"></i>Don't forget to stop all instances after this lesson.\n</div>","readingTimeAsText":"8 min read","publishedFromNow":"15 days ago"},"recentPosts":[{"title":"How to Open Node.js Project","authorName":"Thiago Ferreira","authorId":"thiago-ferreira","publishedAt":"April 6, 2024 5:12 AM","category":"Tutorial","tags":["vscode","how-to"],"id":"how-to-open-nodejs-project","content":"<h1 id=\"introduction\">Introduction</h1>\n<p>First, you have to open the project on Visual Studio Code (VS Code). You should search for the \"File\" menu and then \"Open Folder…\". Please don't select \"Open..\" This will open a single file. You should open the entire project (entire folder).</p>\n<p><img src=\"unnamed.png\" alt=\"\" width=\"300\" height=\"300\" /></p>\n<p>Select the project folder and then press \"Open\".</p>\n<p><img src=\"unnamed-1.png\" alt=\"\" width=\"300\" height=\"300\" /></p>\n<p>If everything goes well, you should be able to see on VS Code the entire folder</p>\n<p><img src=\"unnamed-2.png\" alt=\"\" width=\"300\" height=\"300\" /></p>\n<p>Go back to the menu bar, search for \"View\" and then click on \"Terminal\".</p>\n<p><img src=\"unnamed-3.png\" alt=\"\" width=\"300\" height=\"300\" /></p>\n<p>This will open a built-in terminal on VS Code. The good thing is that the terminal is opened in the project folder. That is, you don't need to navigate to that folder. You are ready to launch your project.</p>\n<p><img src=\"unnamed-4.png\" alt=\"\" width=\"500\" height=\"500\" /></p>\n<p>Just type <code>node server.js</code>. You should be able now to see your project running in the browser.</p>\n<p><img src=\"unnamed-5.png\" alt=\"\" width=\"500\" height=\"500\" /></p>","readingTimeAsText":"1 min read","publishedFromNow":"9 hours ago"},{"title":"How to Install PostgreSQL on Windows","authorName":"Thiago Ferreira","authorId":"thiago-ferreira","publishedAt":"April 1, 2024 5:12 AM","category":"Tutorial","tags":["how-to","postgresql"],"id":"how-to-install-postgresql-on-windows","content":"<h1 id=\"downloading\">Downloading</h1>\n<p>Access the <a href=\"https://www.postgresql.org/download/\">download page</a> and select \"Windows\".</p>\n<p><img src=\"1.png\"></p>\n<p>Click on \"Download the installer\".</p>\n<p><img src=\"2.png\"></p>\n<p>Finally, click on \"Windows x86-64\".</p>\n<p><img  width=\"400\" src=\"3.png\"></p>\n<p>The download should start automatically. Otherwise, press \"Click here\".</p>\n<p><img width=\"400\" src=\"4.png\"></p>\n<p>If everything goes well, you should have the installer located in the \"Downloads\" folder on your Windows. Just double-click on it to initiate the installation process.</p>\n<p><img width=\"400\" src=\"5.png\"></p>\n<h1 id=\"installing\">Installing</h1>\n<p>Just press \"Yes\" to confirm you would like to install PostgreSQL.</p>\n<p><img width=\"400\" src=\"6.png\"></p>\n<p>Just click on \"Next\".</p>\n<p><img width=\"400\" src=\"7.png\"></p>\n<p>Keep everything as it is. Just click on \"Next\".</p>\n<p><img width=\"400\" src=\"8.png\"></p>\n<p>Keep everything as it is. Just click on \"Next\".</p>\n<p><img width=\"400\" src=\"10.png\"></p>\n<p>Keep everything as it is. Just click on \"Next\".</p>\n<p><img width=\"400\" src=\"11.png\"></p>\n<p>Type the password for your database. For now, you can just type <code>postgres</code> in both text fields. In production, <strong>never</strong> use this password. Choose a strong one. After that, click on \"Next\".</p>\n<p><img width=\"400\" src=\"12.png\"></p>\n<p>Keep the port information as it is. Click on \"next\".</p>\n<p><img width=\"400\" src=\"13.png\"></p>\n<p>Keep the location as it is. Click on \"next\".</p>\n<p><img width=\"400\" src=\"14.png\"></p>\n<p>A pre-installation summary will show up to confirm all your selections. Just press on \"Next\".</p>\n<p><img width=\"400\" src=\"15.png\"></p>\n<p>Finally, press on \"Next\".</p>\n<p><img width=\"400\" src=\"16.png\"></p>\n<p>The installation process will get started. Wait a few minutes to get it done.</p>\n<p><img width=\"400\" src=\"17.png\"></p>\n<p>Heads up! Uncheck this option. We don't need it for now. Click on \"Finish\".</p>\n<p><img width=\"400\" src=\"18.png\"></p>\n<p>Done. The entire process should be completed and you have installed both PostgreSQL and pgAdmin 4 in the same process.</p>\n<p>If you would like to install only the pgAdmin 4, I recommend you to follow <a href=\"/posts/how-to-install-pgadmin-4-on-windows\">this tutorial</a>.</p>","readingTimeAsText":"2 min read","publishedFromNow":"5 days ago"},{"title":"How to Install pgAdmin 4 on Windows","authorName":"Thiago Ferreira","authorId":"thiago-ferreira","publishedAt":"April 1, 2024 5:12 AM","category":"Tutorial","tags":["how-to"],"id":"how-to-install-pgadmin-4-on-windows","content":"<h1 id=\"downloading\">Downloading</h1>\n<p>Access the <a href=\"https://www.pgadmin.org/download/\">download page</a> and select \"Windows\".</p>\n<p><img src=\"1.png\"></p>\n<p>For now, you just need to install the latest version (at this time v8.5). If you are reading this post in the future, just select the latest version available. For now, just click \"pgAdmin 4 v8.5\".</p>\n<p><img src=\"2.png\"></p>\n<p>Click on the <code>.exe</code> file to download it.</p>\n<p><img  width=\"400\" src=\"3.png\"></p>\n<p>If everything goes well, you should have the installer located in the \"Downloads\" folder on your Windows. Just double-click on it to initiate the installation process.</p>\n<h1 id=\"installing\">Installing</h1>\n<p><img width=\"400\" src=\"4.png\"></p>\n<p>The first popup will ask you if you would like to install pgAdmin for all users on your computer or just for you. For now, just install it for you by clicking on \"Install for me only (recommended)\". If you have a computer borrowed from the university, this is the only option for you, since you can install it without asking ITS to set up it for you.</p>\n<p><img width=\"400\" src=\"5.png\"></p>\n<p>Just click \"Next\".</p>\n<p><img width=\"400\" src=\"6.png\"></p>\n<p>Accept the agreement by selecting \"I accept the agreement\" and then clicking on \"Next\".</p>\n<p><img width=\"400\" src=\"7.png\"></p>\n<p>In the next screen, you should not change anything. Just click \"Next\".</p>\n<p><img width=\"400\" src=\"8.png\"></p>\n<p>Again, please do not change anything. Just click \"Next\".</p>\n<p><img width=\"400\" src=\"9.png\"></p>\n<p>Finally, press \"Install\".</p>\n<p><img width=\"400\" src=\"10.png\"></p>\n<p>Please wait for the installation process to be done.</p>\n<p><img width=\"400\" src=\"11.png\"></p>\n<p>Done. You have successfully installed pgAdmin 4 on your computer. It is time to launch it.</p>\n<p><img width=\"400\" src=\"12.png\"></p>\n<h1 id=\"opening\">Opening</h1>\n<p>Open the menu on your Windows and search for \"pgAdmin\". Click to open it.</p>\n<p><img width=\"400\" src=\"13.png\"></p>\n<p>Congratulations! You have installed pgAdmin on your Windows.</p>\n<p><img width=\"400\" src=\"14.png\"></p>","readingTimeAsText":"2 min read","publishedFromNow":"5 days ago"}]},"__N_SSG":true}